{
    "name": "postgres",
    "djClassName": "org.dashjoin.service.SQLDatabase",
    "username": "postgres",
    "password": "DJ1#\bLN1ubFw94pZSZQ4cSG6KxbWukt/wsaZd",
    "url": "jdbc:postgresql://postgres:5432/postgres",
    "ID": "dj/postgres",
    "tables": {
        "Lernziel": {
            "dj-label": "${Ziel}",
            "properties": {
                "Fachbereich": {
                    "ref": "dj/postgres/Fachbereich/ID",
                    "displayWith": "fk"
                }
            },
            "instanceLayout": {
                "widget": "page",
                "children": [
                    {
                        "display": "(\n  $arr := $all(\"postgres\", \"Lernziel2Inhalt\", null, null, null, null, {\"Lernziel\": value.ID});\n  $index := $floor($random()*$count($arr));\n  $id := $arr[$index].Inhalt;\n  $setVariable(\"Inhalt\", $read(\"postgres\", \"Inhalt\", $id).Inhalt);\n  value.Ziel\n)",
                        "title": "Lernziel",
                        "widget": "display"
                    },
                    {
                        "widget": "container",
                        "children": [
                            {
                                "title": "",
                                "print": "(\n$setVariable(\"result\" & value.ID, \"\");\n$x := $curl(\"POST\", \"https://api.openai.com/v1/chat/completions\", {\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Du bist ein strenger Professor der Medizin, der Studierende anhand der Fachliteratur prüft. Ich werde Dir einen Text geben, und Du wirst mir dazu eine relevante und fachspezifische Frage stellen, die direkt aus dem Text hervorgeht und dem Niveau des Studierenden entspricht. Deine Antwort soll ausschließlich die Frage beinhalten, ohne jegliche Einleitung, Erklärung oder zusätzliche Informationen. Stelle direkt die Frage.”\n\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": variable.Inhalt\n      }\n    ]\n }, {\"Authorization\": \"openai\", \"dj-timeout-seconds\": 60}).choices[0].message.content;\n$setVariable(\"frage\" & value.ID, $x);\n$refresh();\n)\n",
                                "text": "Los geht's!",
                                "widget": "button"
                            },
                            {
                                "html": "<br></br>",
                                "widget": "html"
                            }
                        ]
                    },
                    {
                        "display": "$lookup(variable, \"frage\" & value.ID)",
                        "widget": "display"
                    },
                    {
                        "print": "(\n$x := $curl(\"POST\", \"https://api.openai.com/v1/chat/completions\", {\n    \"model\": \"gpt-4o-mini\",\n    \"response_format\": { \"type\": \"json_object\" },\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Du bist ein strenger Professor der Medizin, der Studierende anhand der Fachliteratur prüft. Ich werde Dir einen Text geben, und Du wirst mir dazu eine relevante und fachspezifische Frage stellen, die direkt aus dem Text hervorgeht und dem Niveau des Studierenden entspricht. Verwende ausschließlich Informationen aus dem Text. Anschließend bewertest Du die Antwort anhand folgender Kriterien: Übereinstimmung mit den Inhalten des Textes, Detailliertheit und Korrektheit\nDie Bewertung erfolgt in einem JSON-Objekt mit den folgenden Feldern:\nfeedback: Ein 100 Wörter umfassendes Feedback, das detailliert die richtige Antwort erklärt, häufige Fehler aufzeigt und Tipps gibt, welche an das Thema angrenzenden Bereiche der Studierende noch lernen muss, damit er das Lernziel besser versteht.\nprozent: Ein Prozentwert, der die Qualität der Antwort beschreibt, basierend auf den oben genannten Kriterien\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": variable.Inhalt\n      },\n      {\n        \"role\": \"assistant\",\n        \"content\": $lookup(variable, \"frage\" & value.ID)\n      },\n      {\n        \"role\": \"user\",\n        \"content\": form.antwort\n      }\n    ]\n }, {\"Authorization\": \"openai\", \"dj-timeout-seconds\": 60}).choices[0].message.content;\n $setVariable(\"result\" & value.ID, $parseJson($x));\n$create(\"postgres\", \"Ergebnis\", {\n  \"lernziel\": value.ID,\n  \"paper\": 0,\n  \"frage\": $lookup(variable, \"frage\" & value.ID),\n  \"antwort\": form.antwort,\n  \"feedback\": $parseJson($x).feedback,\n  \"prozent\": $parseJson($x).prozent,\n  \"email\": email,\n  \"zeit\": $now()\n});\n $refresh();\n)\n",
                        "text": "Sende Antwort",
                        "expression": "",
                        "widget": "button",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "antwort": {
                                    "widget": "voice",
                                    "language": "de",
                                    "multiline": true,
                                    "style": {
                                        "width": "400px"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "display": "$lookup(variable, \"result\" & value.ID)",
                        "widget": "display"
                    }
                ]
            }
        },
        "Fachbereich": {
            "instanceLayout": {
                "widget": "page",
                "children": [
                    {
                        "widget": "container",
                        "children": [
                            {
                                "database": "postgres",
                                "query": "lernziel",
                                "arguments": "{\"Fachbereich\": value.ID}",
                                "widget": "table"
                            }
                        ]
                    }
                ]
            },
            "tableLayout": {
                "widget": "page",
                "children": [
                    {
                        "title": "Table: ${value.name}",
                        "widget": "table"
                    },
                    {
                        "widget": "dj-table-metadata"
                    }
                ]
            }
        },
        "Lernziel2Inhalt": {
            "properties": {
                "Inhalt": {
                    "ref": "dj/postgres/Inhalt/ID",
                    "displayWith": "fk"
                },
                "Lernziel": {
                    "ref": "dj/postgres/Lernziel/ID",
                    "displayWith": "fk"
                }
            }
        },
        "Ergebnis": {
            "properties": {
                "lernziel": {
                    "ref": "dj/postgres/Lernziel/ID",
                    "displayWith": "fk"
                }
            },
            "writeRoles": [
                "authenticated"
            ]
        }
    },
    "readRoles": [
        "authenticated"
    ]
}